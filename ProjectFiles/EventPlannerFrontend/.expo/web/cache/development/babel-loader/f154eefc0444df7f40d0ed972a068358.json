{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nvar _jsxFileName = \"C:\\\\Users\\\\rokgr\\\\Desktop\\\\EventPlannerFrontend\\\\providers\\\\AuthProvider.js\";\nimport React, { createContext, useState } from \"react\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nexport var AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      login: function login(_ref) {\n        var response, json;\n        return _regeneratorRuntime.async(function login$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _objectDestructuringEmpty(_ref);\n\n                _context.prev = 1;\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(fetch(\"https://localhost57871/api/User\"));\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(response.json());\n\n              case 7:\n                json = _context.sent;\n                user = (_readOnlyError(\"user\"), json);\n                setUser(user);\n                AsyncStorage.setItem(\"user\", JSON.stringify(user));\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[1, 13]], Promise);\n      },\n      logout: function logout() {\n        AsyncStorage.removeItem(\"user\", \"\");\n        setUser(null);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["C:/Users/rokgr/Desktop/EventPlannerFrontend/providers/AuthProvider.js"],"names":["React","createContext","useState","AuthContext","AuthProvider","props","user","setUser","login","fetch","response","json","AsyncStorage","setItem","JSON","stringify","console","error","logout","removeItem","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAGA,OAAO,IAAMC,WAAW,GAAGF,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,kBACbH,QAAQ,CAAC,IAAD,CADK;AAAA;AAAA,MAC9BI,IAD8B;AAAA,MACxBC,OADwB;;AAErC,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,IAAI,EAAJA,IADK;AAELE,MAAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,iDAGkBC,KAAK,CAAC,iCAAD,CAHvB;;AAAA;AAGCC,gBAAAA,QAHD;AAAA;AAAA,iDAIcA,QAAQ,CAACC,IAAT,EAJd;;AAAA;AAICA,gBAAAA,IAJD;AAKHL,gBAAAA,IAAI,4BAAGK,IAAH,CAAJ;AACAJ,gBAAAA,OAAO,CAACD,IAAD,CAAP;AACAM,gBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAA7B;AAPG;AAAA;;AAAA;AAAA;AAAA;AASHU,gBAAAA,OAAO,CAACC,KAAR;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF;AAcLC,MAAAA,MAAM,EAAE,kBAAM;AACZN,QAAAA,YAAY,CAACO,UAAb,CAAwB,MAAxB,EAAgC,EAAhC;AACAZ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AAjBI,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBGF,KAAK,CAACe,QArBT,CADF;AAyBD,CA3BM","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport { AsyncStorage } from \"react-native\";\n\nexport const AuthContext = createContext({});\n\nexport const AuthProvider = (props) => {\n  const [user, setUser] = useState(null);\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        login: async ({}) => {\n          //API call\n          try {\n            let response = await fetch(\"https://localhost57871/api/User\");\n            let json = await response.json();\n            user = json;\n            setUser(user);\n            AsyncStorage.setItem(\"user\", JSON.stringify(user));\n          } catch (error) {\n            console.error(error);\n          }\n        },\n        logout: () => {\n          AsyncStorage.removeItem(\"user\", \"\");\n          setUser(null);\n        },\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}