{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nexport var useForm = function useForm(initialValues) {\n  var _useState = useState(initialValues),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValues = _useState2[0],\n      setFormValues = _useState2[1];\n\n  return [formValues, function (e) {\n    setFormValues(_objectSpread(_objectSpread({}, formValues), {}, _defineProperty({}, e.target.name, e.target.value)));\n  }];\n};","map":{"version":3,"sources":["C:/Users/rokgr/Desktop/EventPlannerFrontend/hooks/useForm.js"],"names":["useState","useForm","initialValues","formValues","setFormValues","e","target","name","value"],"mappings":";;;;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,aAAa,EAAI;AAAA,kBACAF,QAAQ,CAACE,aAAD,CADR;AAAA;AAAA,MAC7BC,UAD6B;AAAA,MACjBC,aADiB;;AAGpC,SAAO,CAACD,UAAD,EAAa,UAAAE,CAAC,EAAI;AAACD,IAAAA,aAAa,iCAAKD,UAAL,2BAAkBE,CAAC,CAACC,MAAF,CAASC,IAA3B,EAAkCF,CAAC,CAACC,MAAF,CAASE,KAA3C,GAAb;AAAgE,GAAnF,CAAP;AACH,CAJM","sourcesContent":["import {useState} from 'react';\n\nexport const useForm = initialValues => {\n    const [formValues, setFormValues] = useState(initialValues);\n\n    return [formValues, e => {setFormValues({...formValues, [e.target.name]: e.target.value})}]\n}"]},"metadata":{},"sourceType":"module"}