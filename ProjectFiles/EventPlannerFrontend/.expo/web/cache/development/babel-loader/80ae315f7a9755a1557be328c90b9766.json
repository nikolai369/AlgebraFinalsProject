{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rokgr\\\\Desktop\\\\EventPlannerFrontend\\\\providers\\\\AuthProvider.js\";\nimport React, { createContext, useState } from \"react\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nexport var AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      login: function login(auth) {\n        console.log(\"API call start\");\n\n        try {\n          var response = fetch(\"http://localhost:57871/api/user/login\", {\n            method: \"post\",\n            mode: \"no-cors\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json; charset=utf-8\"\n            },\n            body: {\n              \"Email\": auth.Email,\n              \"Password\": auth.Password\n            }\n          });\n          console.log(response);\n        } catch (error) {\n          console.error(error);\n          return error;\n        }\n\n        console.log(\"API call end\");\n      },\n      logout: function logout() {\n        AsyncStorage.removeItem(\"user\", \"\");\n        setUser(null);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["C:/Users/rokgr/Desktop/EventPlannerFrontend/providers/AuthProvider.js"],"names":["React","createContext","useState","AuthContext","AuthProvider","props","user","setUser","login","auth","console","log","response","fetch","method","mode","headers","Accept","body","Email","Password","error","logout","AsyncStorage","removeItem","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAGA,OAAO,IAAMC,WAAW,GAAGF,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,kBACbH,QAAQ,CAAC,IAAD,CADK;AAAA;AAAA,MAC9BI,IAD8B;AAAA,MACxBC,OADwB;;AAErC,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,IAAI,EAAJA,IADK;AAELE,MAAAA,KAAK,EAAE,eAACC,IAAD,EAAU;AAEfC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AAEA,YAAI;AACF,cAAIC,QAAQ,GAAIC,KAAK,CACnB,uCADmB,EAEnB;AACEC,YAAAA,MAAM,EAAE,MADV;AAEEC,YAAAA,IAAI,EAAE,SAFR;AAGEC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE,kBADD;AAEP,8BAAgB;AAFT,aAHX;AAQEC,YAAAA,IAAI,EAAE;AACJ,uBAAUT,IAAI,CAACU,KADX;AAEJ,0BAAaV,IAAI,CAACW;AAFd;AARR,WAFmB,CAArB;AAkBAV,UAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAKD,SAxBD,CAwBE,OAAOS,KAAP,EAAc;AACdX,UAAAA,OAAO,CAACW,KAAR,CAAcA,KAAd;AACA,iBAAOA,KAAP;AACD;;AAEDX,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,OApCI;AAqCLW,MAAAA,MAAM,EAAE,kBAAM;AACZC,QAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB,EAAgC,EAAhC;AACAjB,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AAxCI,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA4CGF,KAAK,CAACoB,QA5CT,CADF;AAgDD,CAlDM","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport { AsyncStorage } from \"react-native\";\n\nexport const AuthContext = createContext({});\n\nexport const AuthProvider = (props) => {\n  const [user, setUser] = useState(null);\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        login: (auth) => {\n          //API call\n          console.log(\"API call start\");\n\n          try {\n            let response =  fetch(\n              \"http://localhost:57871/api/user/login\",\n              {\n                method: \"post\",\n                mode: \"no-cors\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json; charset=utf-8\",\n                  \n                },\n                body: {\n                  \"Email\" : auth.Email,\n                  \"Password\" : auth.Password\n                }\n              }\n            );\n\n            //let json =  response.json();\n            console.log(response);\n            //setUser(json);\n\n            //AsyncStorage.setItem(\"user\", JSON.stringify(user));\n\n          } catch (error) {\n            console.error(error);\n            return error;  \n          }\n\n          console.log(\"API call end\");\n        },\n        logout: () => {\n          AsyncStorage.removeItem(\"user\", \"\");\n          setUser(null);\n        },\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};"]},"metadata":{},"sourceType":"module"}