{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rokgr\\\\Desktop\\\\EventPlannerFrontend\\\\screens\\\\LoginScreen.js\";\nimport React, { useContext } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport Center from \"../components/Center\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport LinkButton from \"../components/LinkButton\";\nimport { useForm } from \"../hooks/useForm\";\nimport TextField from \"../components/TextField\";\nimport ButtonContainer from \"../components/ButtonContainer\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nvar isWeb = Platform.OS === \"web\";\nexport var LoginScreen = function LoginScreen(props) {\n  var _useContext = useContext(AuthContext),\n      login = _useContext.login;\n\n  var _useForm = useForm({\n    Email: \"\",\n    Password: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 2),\n      formValues = _useForm2[0],\n      setFormValues = _useForm2[1];\n\n  return React.createElement(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Email: \"), React.createElement(Input, {\n    name: \"Email\",\n    value: formValues.Email,\n    onChange: setFormValues,\n    keyboardType: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Password: \"), React.createElement(Input, {\n    name: \"Password\",\n    value: formValues.password,\n    onChange: setFormValues,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), React.createElement(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"Log in\",\n    color: \"green\",\n    onPress: function onPress() {\n      return login({\n        email: formValues.email,\n        password: formValues.password\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), isWeb ? React.createElement(LinkButton, {\n    to: \"/signup\",\n    title: \"Register\",\n    onPress: function onPress() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }) : React.createElement(Button, {\n    color: \"blue\",\n    title: \"Register\",\n    onPress: function onPress() {\n      props.navigation.navigate(\"SignUp\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }))));\n};","map":{"version":3,"sources":["C:/Users/rokgr/Desktop/EventPlannerFrontend/screens/LoginScreen.js"],"names":["React","useContext","Card","Input","Center","AuthContext","LinkButton","useForm","TextField","ButtonContainer","TouchableWithoutFeedback","isWeb","Platform","OS","LoginScreen","props","login","Email","Password","formValues","setFormValues","password","email","navigation","navigate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAGA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,SAASC,WAAT;AACA,OAAOC,UAAP;AACA,SAASC,OAAT;AACA,OAAOC,SAAP;AACA,OAAOC,eAAP;AACA,SAASC,wBAAT,QAAyC,8BAAzC;AAEA,IAAMC,KAAK,GAAGC,QAAQ,CAACC,EAAT,KAAgB,KAA9B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,oBAClBd,UAAU,CAACI,WAAD,CADQ;AAAA,MAC5BW,KAD4B,eAC5BA,KAD4B;;AAAA,iBAEAT,OAAO,CAAC;AAAEU,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAFP;AAAA;AAAA,MAE7BC,UAF6B;AAAA,MAEjBC,aAFiB;;AAIpC,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAED,UAAU,CAACF,KAFpB;AAGE,IAAA,QAAQ,EAAEG,aAHZ;AAIE,IAAA,YAAY,EAAC,eAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,EASE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAED,UAAU,CAACE,QAFpB;AAGE,IAAA,QAAQ,EAAED,aAHZ;AAIE,IAAA,eAAe,EAAE,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAeE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,KAAK,EAAC,OAA7B;AAAqC,IAAA,OAAO,EAAE;AAAA,aAAMJ,KAAK,CAAC;AAACM,QAAAA,KAAK,EAAEH,UAAU,CAACG,KAAnB;AAA0BD,QAAAA,QAAQ,EAAEF,UAAU,CAACE;AAA/C,OAAD,CAAX;AAAA,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGV,KAAK,GACJ,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAC,UAA/B;AAA0C,IAAA,OAAO,EAAE,mBAAM,CAAE,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAGJ,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbI,MAAAA,KAAK,CAACQ,UAAN,CAAiBC,QAAjB,CAA0B,QAA1B;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAfF,CALJ,CADF;AAuCD,CA3CM","sourcesContent":["import React, { useContext } from \"react\";\nimport { Button, Platform, Keyboard } from \"react-native\";\n\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport Center from \"../components/Center\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport LinkButton from \"../components/LinkButton\";\nimport { useForm } from \"../hooks/useForm\";\nimport TextField from \"../components/TextField\";\nimport ButtonContainer from \"../components/ButtonContainer\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\n\nconst isWeb = Platform.OS === \"web\";\n\nexport const LoginScreen = (props) => {\n  const { login } = useContext(AuthContext);\n  const [formValues, setFormValues] = useForm({ Email: \"\", Password: \"\" });\n\n  return (\n    <Center>\n      {/* <TouchableWithoutFeedback\n        style={{ padding: 40 }}\n        onPress={() => Keyboard.dismiss()}\n      > */}\n        <Card>\n          <TextField>Email: </TextField>\n          <Input\n            name=\"Email\"\n            value={formValues.Email}\n            onChange={setFormValues}\n            keyboardType=\"email-address\"\n          />\n          <TextField>Password: </TextField>\n          <Input\n            name=\"Password\"\n            value={formValues.password}\n            onChange={setFormValues}\n            secureTextEntry={true}\n          />\n          <ButtonContainer>\n            <Button title=\"Log in\" color=\"green\" onPress={() => login({email: formValues.email, password: formValues.password})} />\n            {isWeb ? (\n              <LinkButton to=\"/signup\" title=\"Register\" onPress={() => {}} />\n            ) : (\n              <Button\n                color=\"blue\"\n                title=\"Register\"\n                onPress={() => {\n                  props.navigation.navigate(\"SignUp\");\n                }}\n              />\n            )}\n          </ButtonContainer>\n        </Card>\n      {/* </TouchableWithoutFeedback> */}\n    </Center>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}