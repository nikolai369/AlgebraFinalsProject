{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rokgr\\\\Desktop\\\\EventPlannerFrontend\\\\screens\\\\RegisterScreen.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport Center from \"../components/Center\";\nimport LinkButton from \"../components/LinkButton\";\nimport { useForm } from \"../hooks/useForm\";\nimport TextField from \"../components/TextField\";\nimport ButtonContainer from \"../components/ButtonContainer\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nvar isWeb = Platform.OS === \"web\";\nexport var RegisterScreen = function RegisterScreen(props) {\n  var _useForm = useForm({\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 2),\n      formValues = _useForm2[0],\n      setFormValues = _useForm2[1];\n\n  var test = function test() {\n    console.log(formValues.name);\n  };\n\n  return React.createElement(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    style: {\n      padding: 40\n    },\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Name: \"), React.createElement(Input, {\n    name: \"name\",\n    value: formValues.name,\n    onChange: setFormValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Surname: \"), React.createElement(Input, {\n    name: \"surname\",\n    value: formValues.surname,\n    onChange: setFormValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Email: \"), React.createElement(Input, {\n    name: \"email\",\n    value: formValues.email,\n    onChange: setFormValues,\n    keyboardType: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Password: \"), React.createElement(Input, {\n    name: \"password\",\n    value: formValues.password,\n    onChange: setFormValues,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Confirm password: \"), React.createElement(Input, {\n    name: \"confirmPassword\",\n    value: formValues.confirmPassword,\n    onChange: setFormValues,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), React.createElement(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    color: \"green\",\n    onPress: test,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), isWeb ? React.createElement(LinkButton, {\n    to: \"/signin\",\n    title: \"Cancle\",\n    color: \"red\",\n    onPress: function onPress() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }) : React.createElement(Button, {\n    title: \"Cancle\",\n    color: \"red\",\n    onPress: function onPress() {\n      props.navigation.navigate(\"SignIn\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  })))));\n};\nvar styles = StyleSheet.create({\n  inputContainer: {\n    alignContent: \"center\",\n    width: 300\n  }\n});","map":{"version":3,"sources":["C:/Users/rokgr/Desktop/EventPlannerFrontend/screens/RegisterScreen.js"],"names":["React","Card","Input","Center","LinkButton","useForm","TextField","ButtonContainer","TouchableWithoutFeedback","isWeb","Platform","OS","RegisterScreen","props","name","surname","email","password","confirmPassword","formValues","setFormValues","test","console","log","padding","Keyboard","dismiss","styles","inputContainer","navigation","navigate","StyleSheet","create","alignContent","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, Button, Platform, Keyboard } from \"react-native\";\n\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport Center from \"../components/Center\";\nimport LinkButton from \"../components/LinkButton\";\nimport { useForm } from \"../hooks/useForm\";\nimport TextField from \"../components/TextField\";\nimport ButtonContainer from \"../components/ButtonContainer\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\n\nconst isWeb = Platform.OS === \"web\";\n\nexport const RegisterScreen = (props) => {\n  const [formValues, setFormValues] = useForm({\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const test = () => {\n    console.log(formValues.name);\n  };\n\n  return (\n    <Center>\n      <TouchableWithoutFeedback\n        style={{ padding: 40 }}\n        onPress={() => Keyboard.dismiss()}\n      >\n        <Card style={styles.inputContainer}>\n          <TextField>Name: </TextField>\n          <Input name=\"name\" value={formValues.name} onChange={setFormValues} />\n          <TextField>Surname: </TextField>\n          <Input\n            name=\"surname\"\n            value={formValues.surname}\n            onChange={setFormValues}\n          />\n          <TextField>Email: </TextField>\n          <Input\n            name=\"email\"\n            value={formValues.email}\n            onChange={setFormValues}\n            keyboardType=\"email-address\"\n          />\n          <TextField>Password: </TextField>\n          <Input\n            name=\"password\"\n            value={formValues.password}\n            onChange={setFormValues}\n            secureTextEntry={true}\n          />\n          <TextField>Confirm password: </TextField>\n          <Input\n            name=\"confirmPassword\"\n            value={formValues.confirmPassword}\n            onChange={setFormValues}\n            secureTextEntry={true}\n          />\n          <ButtonContainer>\n            <Button title=\"Confirm\" color=\"green\" onPress={test} />\n            {isWeb ? (\n              <LinkButton\n                to=\"/signin\"\n                title=\"Cancle\"\n                color=\"red\"\n                onPress={() => {}}\n              />\n            ) : (\n              <Button\n                title=\"Cancle\"\n                color=\"red\"\n                onPress={() => {\n                  props.navigation.navigate(\"SignIn\");\n                }}\n              />\n            )}\n          </ButtonContainer>\n        </Card>\n      </TouchableWithoutFeedback>\n    </Center>\n  );\n};\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    alignContent: \"center\",\n    width: 300,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}