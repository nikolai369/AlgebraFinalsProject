{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rokgr\\\\Desktop\\\\EventPlannerFrontend\\\\screens\\\\RegisterScreen.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport Center from \"../components/Center\";\nimport LinkButton from \"../components/LinkButton\";\nimport { useForm } from \"../hooks/useForm\";\nimport TextField from \"../components/TextField\";\nimport { RegisterContext } from \"../providers/RegisterProvider\";\nimport ButtonContainer from \"../components/ButtonContainer\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nvar isWeb = Platform.OS === \"web\";\nexport var RegisterScreen = function RegisterScreen(props) {\n  var _useForm = useForm({\n    FirstName: \"\",\n    LastName: \"\",\n    Email: \"\",\n    Password: \"\",\n    Age: \"\",\n    IBAN: \"\",\n    Info: \"\",\n    confirmPassword: \"\"\n  }),\n      _useForm2 = _slicedToArray(_useForm, 2),\n      formValues = _useForm2[0],\n      setFormValues = _useForm2[1];\n\n  var test = function test() {\n    console.log(formValues.FirstName);\n  };\n\n  return React.createElement(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    style: {\n      padding: 40\n    },\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Name: \"), React.createElement(Input, {\n    name: \"First name\",\n    value: formValues.FirstName,\n    onChange: setFormValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Surname: \"), React.createElement(Input, {\n    name: \"Last name\",\n    value: formValues.LastName,\n    onChange: setFormValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Email: \"), React.createElement(Input, {\n    name: \"Email\",\n    value: formValues.Email,\n    onChange: setFormValues,\n    keyboardType: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Password: \"), React.createElement(Input, {\n    name: \"Password\",\n    value: formValues.Password,\n    onChange: setFormValues,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Confirm password: \"), React.createElement(Input, {\n    name: \"confirmPassword\",\n    value: formValues.confirmPassword,\n    onChange: setFormValues,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Age: \"), React.createElement(Input, {\n    name: \"Age\",\n    value: formValues.Age,\n    onChange: setFormValues,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"IBAN: \"), React.createElement(Input, {\n    name: \"Age\",\n    value: formValues.IBAN,\n    onChange: setFormValues,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Info: \"), React.createElement(Input, {\n    name: \"Age\",\n    value: formValues.Info,\n    onChange: setFormValues,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), React.createElement(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    color: \"green\",\n    onPress: function onPress() {\n      return register({\n        FirstName: formValues.FirstName,\n        LastName: formValues.LastName,\n        Email: formValues.Email,\n        Password: formValues.Password,\n        Age: formValues.Age,\n        IBAN: formValues.IBAN,\n        Info: formValues.Info\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), isWeb ? React.createElement(LinkButton, {\n    to: \"/signin\",\n    title: \"Cancle\",\n    color: \"red\",\n    onPress: function onPress() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }) : React.createElement(Button, {\n    title: \"Cancle\",\n    color: \"red\",\n    onPress: function onPress() {\n      props.navigation.navigate(\"SignIn\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  })))));\n};\nvar styles = StyleSheet.create({\n  inputContainer: {\n    alignContent: \"center\",\n    width: 300\n  }\n});","map":{"version":3,"sources":["C:/Users/rokgr/Desktop/EventPlannerFrontend/screens/RegisterScreen.js"],"names":["React","Card","Input","Center","LinkButton","useForm","TextField","RegisterContext","ButtonContainer","TouchableWithoutFeedback","isWeb","Platform","OS","RegisterScreen","props","FirstName","LastName","Email","Password","Age","IBAN","Info","confirmPassword","formValues","setFormValues","test","console","log","padding","Keyboard","dismiss","styles","inputContainer","register","navigation","navigate","StyleSheet","create","alignContent","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, Button, Platform, Keyboard } from \"react-native\";\n\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport Center from \"../components/Center\";\nimport LinkButton from \"../components/LinkButton\";\nimport { useForm } from \"../hooks/useForm\";\nimport TextField from \"../components/TextField\";\nimport {RegisterContext} from \"../providers/RegisterProvider\";\nimport ButtonContainer from \"../components/ButtonContainer\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\n\nconst isWeb = Platform.OS === \"web\";\n\nexport const RegisterScreen = (props) => {\n  const [formValues, setFormValues] = useForm({\n    FirstName: \"\",\n    LastName: \"\",\n    Email: \"\",\n    Password: \"\",\n    Age: \"\",\n    IBAN: \"\",\n    Info: \"\",\n    confirmPassword: \"\",\n  });\n\n  const test = () => {\n    console.log(formValues.FirstName);\n  };\n\n  return (\n    <Center>\n      <TouchableWithoutFeedback\n        style={{ padding: 40 }}\n        onPress={() => Keyboard.dismiss()}\n      >\n        <Card style={styles.inputContainer}>\n          <TextField>Name: </TextField>\n          <Input \n            name=\"First name\" \n            value={formValues.FirstName} \n            onChange={setFormValues} \n            />\n          <TextField>Surname: </TextField>\n          <Input\n            name=\"Last name\"\n            value={formValues.LastName}\n            onChange={setFormValues}\n          />\n          <TextField>Email: </TextField>\n          <Input\n            name=\"Email\"\n            value={formValues.Email}\n            onChange={setFormValues}\n            keyboardType=\"email-address\"\n          />\n          <TextField>Password: </TextField>\n          <Input\n            name=\"Password\"\n            value={formValues.Password}\n            onChange={setFormValues}\n            secureTextEntry={true}\n          />\n          <TextField>Confirm password: </TextField>\n          <Input\n            name=\"confirmPassword\"\n            value={formValues.confirmPassword}\n            onChange={setFormValues}\n            secureTextEntry={true}\n          />\n          <TextField>Age: </TextField>\n          <Input\n            name=\"Age\"\n            value={formValues.Age}\n            onChange={setFormValues}\n            secureTextEntry={true}\n          />\n          <TextField>IBAN: </TextField>\n          <Input\n            name=\"Age\"\n            value={formValues.IBAN}\n            onChange={setFormValues}\n            secureTextEntry={true}\n          />\n          <TextField>Info: </TextField>\n          <Input\n            name=\"Age\"\n            value={formValues.Info}\n            onChange={setFormValues}\n            secureTextEntry={true}\n          />\n          <ButtonContainer>\n            <Button title=\"Confirm\" color=\"green\" onPress={() => register({\n              FirstName: formValues.FirstName,\n              LastName: formValues.LastName,\n              Email: formValues.Email,\n              Password: formValues.Password,\n              Age: formValues.Age,\n              IBAN: formValues.IBAN,\n              Info: formValues.Info\n              })} />\n            {isWeb ? (\n              <LinkButton\n                to=\"/signin\"\n                title=\"Cancle\"\n                color=\"red\"\n                onPress={() => {}}\n              />\n            ) : (\n              <Button\n                title=\"Cancle\"\n                color=\"red\"\n                onPress={() => {\n                  props.navigation.navigate(\"SignIn\");\n                }}\n              />\n            )}\n          </ButtonContainer>\n        </Card>\n      </TouchableWithoutFeedback>\n    </Center>\n  );\n};\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    alignContent: \"center\",\n    width: 300,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}